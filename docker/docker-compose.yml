version: "3.8"
services:
  reverse-proxy:
      image: traefik:v2.11
      container_name: traefik
      restart: unless-stopped
      security_opt:
        - no-new-privileges:true
      ports:
        - 80:80
        - 443:443
      volumes:
        - /var/run/docker.sock:/var/run/docker.sock:ro
        - ../app/traefik/config/traefik.yml:/etc/traefik/traefik.yml:ro
        - ../app/traefik/config/config.yml:/etc/traefik/config.yml:ro
        - ../app/traefik/certs:/etc/certs:ro
      networks:
        - mired
      labels:
        - "traefik.enable=true"
        - "traefik.http.routers.traefik=true"
  estructura:
    image: flask-sysacad:v1.0.0
    networks:
      - mired
    ports:
      - 5000:5000
    depends_on:
      - postgres
    environment:
      - FLASK_CONTEXT=${FLASK_CONTEXT}
      - SQLALCHEMY_TRACK_MODIFICATIONS=${SQLALCHEMY_TRACK_MODIFICATIONS}  
      - SQLALCHEMY_RECORD_QUERIES=${SQLALCHEMY_RECORD_QUERIES}
      - PROD_DATABASE_URI=postgresql://pprats:naranja@postgres:5432/SYSACAD
    volumes:
      - ../app:/home/sysacad/app
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.backend.rule=Host(`universidad.localhost`)"
      - "traefik.http.routers.backend.entrypoints=https"
      - "traefik.http.routers.backend.tls=true"
      # Puerto por defecto del contenedor en flask
      - "traefik.http.services.backend.loadbalancer.server.port=5000"
      - "traefik.docker.network=mired"
      
  postgres:
    image: postgres:15
    restart: always
    environment:
      POSTGRES_USER: pprats
      POSTGRES_PASSWORD: naranja
      POSTGRES_DB: SYSACAD
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
    networks:
      - mired

networks:
  mired:
    external: true

volumes:

  pgdata: